import java.util.Random;
import java.util.Scanner;

public class EnhancedNumberGuessingGame {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        int lowerBound = 1;
        int upperBound = 100;
        int numberToGuess = random.nextInt(upperBound - lowerBound + 1) + lowerBound;
        int numberOfTries = 0;
        boolean hasGuessedCorrectly = false;

        System.out.println("Welcome to the Enhanced Number Guessing Game!");
        System.out.println("I have selected a number between " + lowerBound + " and " + upperBound + ". Try to guess it.");

        while (!hasGuessedCorrectly) {
            System.out.print("Enter your guess (or enter '0' to quit): ");

            if (!scanner.hasNextInt()) {
                System.out.println("Invalid input. Please enter a valid number.");
                scanner.next(); // consume the invalid input
                continue;
            }

            int userGuess = scanner.nextInt();
            numberOfTries++;

            if (userGuess == 0) {
                System.out.println("Quitting the game. The number was: " + numberToGuess);
                break;
            }

            if (userGuess < lowerBound || userGuess > upperBound) {
                System.out.println("Please guess a number within the valid range.");
            } else if (userGuess < numberToGuess) {
                System.out.println("Too low! Try again.");
            } else if (userGuess > numberToGuess) {
                System.out.println("Too high! Try again.");
            } else {
                hasGuessedCorrectly = true;
                int score = calculateScore(numberOfTries);
                System.out.println("Congratulations! You've guessed the number in " + numberOfTries + " tries.");
                System.out.println("Your score is: " + score);
            }
        }

        scanner.close();
    }

    private static int calculateScore(int attempts) {
        // You can customize the scoring logic based on your preference.
        // For example, giving higher scores for fewer attempts.
        if (attempts == 0) {
            return 0; // To handle division by zero
        }
        return 1000 / attempts;
    }
}
